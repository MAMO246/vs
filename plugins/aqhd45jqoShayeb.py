#TeleGram: @ADIL721
import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwojIENvcHlyaWdodCAoQykgQHN1YmlucHMKIyBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQojIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQojIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yCiMgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KCiMgVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiMgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKIyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlCiMgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCgojIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZQojIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KZnJvbSB1dGlscyBpbXBvcnQgTE9HR0VSCmZyb20gY29uZmlnIGltcG9ydCBDb25maWcKZnJvbSBweXJvZ3JhbSBpbXBvcnQgKAogICAgQ2xpZW50LCAKICAgIGZpbHRlcnMKKQpmcm9tIHV0aWxzIGltcG9ydCAoCiAgICBnZXRfYWRtaW5zLCAKICAgIHN5bmNfdG9fZGIsIAogICAgZGVsZXRlX21lc3NhZ2VzLAogICAgc3Vkb19maWx0ZXIKKQoKCkBDbGllbnQub25fbWVzc2FnZShmaWx0ZXJzLmNvbW1hbmQoWyd2Y3Byb21vdGUnLCBmInZjcHJvbW90ZUB7Q29uZmlnLkJPVF9VU0VSTkFNRX0iXSkgJiBzdWRvX2ZpbHRlcikKYXN5bmMgZGVmIGFkZF9hZG1pbihjbGllbnQsIG1lc3NhZ2UpOgogICAgaWYgbWVzc2FnZS5yZXBseV90b19tZXNzYWdlOgogICAgICAgIGlmIG1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIuaWQgaXMgTm9uZToKICAgICAgICAgICAgayA9IGF3YWl0IG1lc3NhZ2UucmVwbHkoIllvdSBhcmUgYW4gYW5vbnltb3VzIGFkbWluLCB5b3UgY2FuJ3QgZG8gdGhpcy4iKQogICAgICAgICAgICBhd2FpdCBkZWxldGVfbWVzc2FnZXMoW21lc3NhZ2UsIGtdKQogICAgICAgICAgICByZXR1cm4KICAgICAgICB1c2VyX2lkPW1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIuaWQKICAgICAgICB1c2VyPW1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIKCiAgICBlbGlmICcgJyBpbiBtZXNzYWdlLnRleHQ6CiAgICAgICAgYywgdXNlciA9IG1lc3NhZ2UudGV4dC5zcGxpdCgiICIsIDEpCiAgICAgICAgaWYgdXNlci5zdGFydHN3aXRoKCJAIik6CiAgICAgICAgICAgIHVzZXI9dXNlci5yZXBsYWNlKCJAIiwgIiIpCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHVzZXI9YXdhaXQgY2xpZW50LmdldF91c2Vycyh1c2VyKQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBrPWF3YWl0IG1lc3NhZ2UucmVwbHkoZiJJIHdhcyB1bmFibGUgdG8gbG9jYXRlIHRoYXQgdXNlci5cbkVycm9yOiB7ZX0iKQogICAgICAgICAgICAgICAgTE9HR0VSLmVycm9yKGYiVW5hYmxlIHRvIGZpbmQgdGhlIHVzZXIgLSB7ZX0iLCBleGNfaW5mbz1UcnVlKQogICAgICAgICAgICAgICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB1c2VyX2lkPXVzZXIuaWQKICAgICAgICBlbHNlOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB1c2VyX2lkPWludCh1c2VyKQogICAgICAgICAgICAgICAgdXNlcj1hd2FpdCBjbGllbnQuZ2V0X3VzZXJzKHVzZXJfaWQpCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGs9YXdhaXQgbWVzc2FnZS5yZXBseShmIllvdSBzaG91bGQgZ2l2ZSBhIHVzZXIgaWQgb3IgaGlzIHVzZXJuYW1lIHdpdGggQC4iKQogICAgICAgICAgICAgICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKICAgICAgICAgICAgICAgIHJldHVybgogICAgZWxzZToKICAgICAgICBrPWF3YWl0IG1lc3NhZ2UucmVwbHkoIk5vIHVzZXIgc3BlY2lmaWVkLCByZXBseSB0byBhIHVzZXIgd2l0aCAvdmNwcm9tb3RlIG9yIHBhc3MgYSB1c2VycyB1c2VyIGlkIG9yIHVzZXJuYW1lLiIpCiAgICAgICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKICAgICAgICByZXR1cm4KICAgIGlmIHVzZXJfaWQgaW4gQ29uZmlnLkFETUlOUzoKICAgICAgICBrID0gYXdhaXQgbWVzc2FnZS5yZXBseSgiVGhpcyB1c2VyIGlzIGFscmVhZHkgYW4gYWRtaW4uIikgCiAgICAgICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKICAgICAgICByZXR1cm4KICAgIENvbmZpZy5BRE1JTlMuYXBwZW5kKHVzZXJfaWQpCiAgICBrPWF3YWl0IG1lc3NhZ2UucmVwbHkoZiJTdWNjZXNmdWxseSBwcm9tb3RlZCB7dXNlci5tZW50aW9ufSBhcyBWQyBhZG1pbiIpCiAgICBhd2FpdCBzeW5jX3RvX2RiKCkKICAgIGF3YWl0IGRlbGV0ZV9tZXNzYWdlcyhbbWVzc2FnZSwga10pCgoKQENsaWVudC5vbl9tZXNzYWdlKGZpbHRlcnMuY29tbWFuZChbJ3ZjZGVtb3RlJywgZiJ2Y2RlbW90ZUB7Q29uZmlnLkJPVF9VU0VSTkFNRX0iXSkgJiBzdWRvX2ZpbHRlcikKYXN5bmMgZGVmIHJlbW92ZV9hZG1pbihjbGllbnQsIG1lc3NhZ2UpOgogICAgaWYgbWVzc2FnZS5yZXBseV90b19tZXNzYWdlOgogICAgICAgIGlmIG1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIuaWQgaXMgTm9uZToKICAgICAgICAgICAgayA9IGF3YWl0IG1lc3NhZ2UucmVwbHkoIllvdSBhcmUgYW4gYW5vbnltb3VzIGFkbWluLCB5b3UgY2FuJ3QgZG8gdGhpcy4iKQogICAgICAgICAgICBhd2FpdCBkZWxldGVfbWVzc2FnZXMoW21lc3NhZ2UsIGtdKQogICAgICAgICAgICByZXR1cm4KICAgICAgICB1c2VyX2lkPW1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIuaWQKICAgICAgICB1c2VyPW1lc3NhZ2UucmVwbHlfdG9fbWVzc2FnZS5mcm9tX3VzZXIKICAgIGVsaWYgJyAnIGluIG1lc3NhZ2UudGV4dDoKICAgICAgICBjLCB1c2VyID0gbWVzc2FnZS50ZXh0LnNwbGl0KCIgIiwgMSkKICAgICAgICBpZiB1c2VyLnN0YXJ0c3dpdGgoIkAiKToKICAgICAgICAgICAgdXNlcj11c2VyLnJlcGxhY2UoIkAiLCAiIikKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdXNlcj1hd2FpdCBjbGllbnQuZ2V0X3VzZXJzKHVzZXIpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIGsgPSBhd2FpdCBtZXNzYWdlLnJlcGx5KGYiSSB3YXMgdW5hYmxlIHRvIGxvY2F0ZSB0aGF0IHVzZXIuXG5FcnJvcjoge2V9IikKICAgICAgICAgICAgICAgIExPR0dFUi5lcnJvcihmIlVuYWJsZSB0byBMb2NhdGUgdXNlciwge2V9IiwgZXhjX2luZm89VHJ1ZSkKICAgICAgICAgICAgICAgIGF3YWl0IGRlbGV0ZV9tZXNzYWdlcyhbbWVzc2FnZSwga10pCiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgdXNlcl9pZD11c2VyLmlkCiAgICAgICAgZWxzZToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdXNlcl9pZD1pbnQodXNlcikKICAgICAgICAgICAgICAgIHVzZXI9YXdhaXQgY2xpZW50LmdldF91c2Vycyh1c2VyX2lkKQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBrID0gYXdhaXQgbWVzc2FnZS5yZXBseShmIllvdSBzaG91bGQgZ2l2ZSBhIHVzZXIgaWQgb3IgaGlzIHVzZXJuYW1lIHdpdGggQC4iKQogICAgICAgICAgICAgICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKICAgICAgICAgICAgICAgIHJldHVybgogICAgZWxzZToKICAgICAgICBrID0gYXdhaXQgbWVzc2FnZS5yZXBseSgiTm8gdXNlciBzcGVjaWZpZWQsIHJlcGx5IHRvIGEgdXNlciB3aXRoIC92Y2RlbW90ZSBvciBwYXNzIGEgdXNlcnMgdXNlciBpZCBvciB1c2VybmFtZS4iKQogICAgICAgIGF3YWl0IGRlbGV0ZV9tZXNzYWdlcyhbbWVzc2FnZSwga10pCiAgICAgICAgcmV0dXJuCiAgICBpZiBub3QgdXNlcl9pZCBpbiBDb25maWcuQURNSU5TOgogICAgICAgIGsgPSBhd2FpdCBtZXNzYWdlLnJlcGx5KCJUaGlzIHVzZXIgaXMgbm90IGFuIGFkbWluIHlldC4iKQogICAgICAgIGF3YWl0IGRlbGV0ZV9tZXNzYWdlcyhbbWVzc2FnZSwga10pCiAgICAgICAgcmV0dXJuCiAgICBDb25maWcuQURNSU5TLnJlbW92ZSh1c2VyX2lkKQogICAgayA9IGF3YWl0IG1lc3NhZ2UucmVwbHkoZiJTdWNjZXNmdWxseSBEZW1vdGVkIHt1c2VyLm1lbnRpb259IikKICAgIGF3YWl0IHN5bmNfdG9fZGIoKQogICAgYXdhaXQgZGVsZXRlX21lc3NhZ2VzKFttZXNzYWdlLCBrXSkKCgpAQ2xpZW50Lm9uX21lc3NhZ2UoZmlsdGVycy5jb21tYW5kKFsncmVmcmVzaCcsIGYicmVmcmVzaEB7Q29uZmlnLkJPVF9VU0VSTkFNRX0iXSkgJiBmaWx0ZXJzLnVzZXIoQ29uZmlnLlNVRE8pKQphc3luYyBkZWYgcmVmcmVzaF9hZG1pbnMoY2xpZW50LCBtZXNzYWdlKToKICAgIENvbmZpZy5BRE1JTl9DQUNIRT1GYWxzZQogICAgYXdhaXQgZ2V0X2FkbWlucyhDb25maWcuQ0hBVCkKICAgIGsgPSBhd2FpdCBtZXNzYWdlLnJlcGx5KCJBZG1pbiBsaXN0IGhhcyBiZWVuIHJlZnJlc2hlZCIpCiAgICBhd2FpdCBzeW5jX3RvX2RiKCkKICAgIGF3YWl0IGRlbGV0ZV9tZXNzYWdlcyhbbWVzc2FnZSwga10p'))